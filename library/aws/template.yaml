AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  4me-secrets-hook

  Sample SAM Template for 4me-secrets-hook

Parameters:
  4MeDomainParameter:
    Type: String
    Default: 4me-demo.com
  BootstrapSecretApplicationParameter:
    Type: String
    Default: 4me-app-builder
  BootstrapSecretAccountParameter:
    Type: String
    Default: default
  BootstrapSecretEnabledReferencesParameter:
    Type: String
    Default: "*"

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    CodeUri: secrets-lambda/
    Handler: app.lambdaHandler
    Runtime: nodejs20.x

Resources:
  SecretsFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Zip
      MemorySize: 128
      Environment: 
        Variables:
          PARAM_4ME_DOMAIN: !Ref 4MeDomainParameter
          PARAM_BOOTSTRAP_APP: !Ref BootstrapSecretApplicationParameter
          PARAM_BOOTSTRAP_ACCOUNT: !Ref BootstrapSecretAccountParameter
          PARAM_ENABLED_OFFERINGS: !Ref BootstrapSecretEnabledReferencesParameter
      Events:
        Secrets:
          Type: Api
          Properties:
            Path: /secrets
            Method: POST
      Policies:
      - Statement:
        - Sid: ReadSecrets
          Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BootstrapSecretApplicationParameter}/${4MeDomainParameter}/${BootstrapSecretAccountParameter}-*"
        - Sid: ReadInstanceSecrets
          Effect: Allow
          Action:
          - secretsmanager:CreateSecret
          - secretsmanager:GetSecretValue
          - secretsmanager:PutSecretValue
          Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${BootstrapSecretApplicationParameter}/*/${4MeDomainParameter}/instances/*"
    Metadata:
      DockerTag: nodejs20.x-v1
      DockerContext: ./secrets-lambda
      Dockerfile: Dockerfile
      BuildMethod: esbuild
      BuildProperties:
        Format: cjs
        Minify: true
        Target: "es2020"
        Sourcemap: false
        SourcesContent: false
        EntryPoints:
          - library/aws/secrets-lambda/app.js
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  SecretsApi:
    Description: "API Gateway endpoint URL for Prod stage for Secrets function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ServerlessRestApi.Stage}/secrets/"
  SecretsFunction:
    Description: "Secrets Lambda Function ARN"
    Value: !GetAtt SecretsFunction.Arn
  SecretsFunctionIamRole:
    Description: "Implicit IAM Role created for Secrets function"
    Value: !GetAtt SecretsFunctionRole.Arn
